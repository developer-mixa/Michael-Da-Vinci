version: '3.8'

services:
  web:
    build: .
    command: > 
      sh -c "python3 ./src/main/app.py"
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - "./:/code"
    depends_on:
      rabbitmq:
          condition: service_healthy
      minio:
        condition: service_started
      postgres:
        condition: service_started
      register_consumer:
        condition: service_started
      user_state_consumer:
        condition: service_started
    networks:
      - acquaintance_internet
      - acquaintance_pg_net
      - rabbit_internet
  register_consumer:
    build: .
    restart: always
    command: >
      sh -c "python3 ./src/apps/consumers/commands/migrate.py && python3 ./src/apps/consumers/register_consumer/app.py"
    volumes:
      - "./:/code"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - acquaintance_internet
      - acquaintance_pg_net
      - rabbit_internet
  user_state_consumer:
    build: .
    restart: always
    command: >
      sh -c "python3 ./src/apps/consumers/commands/migrate.py && python3 ./src/apps/consumers/user_state_consumer/app.py"
    volumes:
      - "./:/code"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - acquaintance_internet
      - acquaintance_pg_net
      - rabbit_internet
  postgres:
    image: postgres
    ports:
      - "8888:5432"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${PG_USER}", "-d", "${PG_DBNAME}" ]
      interval: 1s
      retries: 20
    environment:
      POSTGRES_DB: "${PG_DBNAME}"
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
    container_name: postgres-acquaintance
    volumes:
      - acquaintance_postgresql_data:/var/lib/postgresql/data/
    networks:
      - acquaintance_pg_net
  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.13.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 10s
      retries: 3
    networks:
      - rabbit_internet
  minio:
    hostname: minio-app
    image: quay.io/minio/minio:RELEASE.2024-11-07T00-52-20Z
    command: server /data --console-address ":9001"
    container_name: acquaintance-minio
    volumes:
    - /minio/data:/minio_data
    environment:
      MINIO_ROOT_USER: "${MINIO_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_PASSWORD}"
    healthcheck:
      test: ["CMD", "curl -k -f http://127.0.0.1:9001/minio/health/live || exit 1"]
      interval: 3s
      timeout: 10s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - acquaintance_internet

volumes:
  acquaintance_postgresql_data: null
  rabbitmq-data: null

networks:
  acquaintance_internet:
    name: acquaintance_internet
    driver: bridge
  acquaintance_pg_net:
    name: acquaintance_pg_net
    driver: bridge
  rabbit_internet:
    name: rabbit_internet
    driver: bridge